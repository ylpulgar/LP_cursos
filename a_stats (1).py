# -*- coding: utf-8 -*-
"""a_stats.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GLdM0KUozUcUHw1xt_zQLuVtpsNKHjAl
"""

# Commented out IPython magic to ensure Python compatibility.

# importaciones comunes
import os
import io
import numpy as np
import pandas as pd
import seaborn as sns
import numpy as np
from datetime import datetime


# importacion para visualizacion
# %matplotlib inline
import matplotlib as mpl
import matplotlib.pyplot as plt
mpl.rc('axes', labelsize=14)
mpl.rc('xtick', labelsize=12)
mpl.rc('ytick', labelsize=12)

#Selecciona el archivo de csv desde la ubicación en tu pc
from google.colab import files
uploaded = files.upload()

print (uploaded['supermarket_sales.csv'][:200].decode('utf-8') + '...')

#Crea un dataframe en pandas con el archivo de csv
df_super = pd.read_csv(io.StringIO(uploaded['supermarket_sales.csv'].decode('utf-8')))

df_super.head()

"""Importacioón de la base de datos a un dataframe en pandas"""

#realiza una pequenña tabla de contenido de todas las columnas y el tipo de columnas
df_super.info()

#Separa el dataframe en variables numericas y categoricas
numeric_data = df_super.select_dtypes(include=[np.number])
categorical_data = df_super.select_dtypes(exclude=[np.number])

numeric_data.shape[1]
categorical_data.shape[1]

numeric_data.head()

categorical_data.head()

#Realiza una tabla de sumarización a los campos numéricos(No distingue discretas y continuas)
numeric_data.describe()

#Una operación de grupo implica una combinación de dividir el objeto, aplicar una función y combinar los resultados. Esto se puede utilizar para agrupar grandes cantidades de datos y calcular operaciones en estos grupos.
categorical_data.loc[:,('Invoice ID','Customer type')].groupby(['Customer type']).count()

#La composicion en porcentaje de cada categoria en la variable
categorical_data['Customer type'].value_counts(normalize=True)

categorical_data.loc[:,('Invoice ID','City')].groupby(['City']).count()

categorical_data['City'].value_counts(normalize=True)

categorical_data.loc[:,('Invoice ID','Gender')].groupby(['Gender']).count()

categorical_data['Gender'].value_counts(normalize=True)



"""Realiza el mismo ejercicio anterior para el resto de variables categoricas y en nuestra proxima clase graficaremos algunos graficos para terminar nuestra descripcion de los datos"""